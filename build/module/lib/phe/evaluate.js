"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPHEValue = void 0;
// change to import results in 2.5x slowdown
/*const { suits } = require('./dptables')
const { hash_quinary } = require('./hash')
const { flush, noflush } = require('./hash-table')*/
const dptables_1 = require("./dptables");
const hash_1 = require("./hash");
const hash_table_1 = require("./hash-table");
const binaries_by_id = [
    // 52
    0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x2, 0x2, 0x4, 0x4, 0x4, 0x4, 0x8, 0x8, 0x8,
    0x8, 0x10, 0x10, 0x10, 0x10, 0x20, 0x20, 0x20, 0x20, 0x40, 0x40, 0x40, 0x40,
    0x80, 0x80, 0x80, 0x80, 0x100, 0x100, 0x100, 0x100, 0x200, 0x200, 0x200,
    0x200, 0x400, 0x400, 0x400, 0x400, 0x800, 0x800, 0x800, 0x800, 0x1000, 0x1000,
    0x1000, 0x1000
];
const suitbit_by_id = [
    // 52
    0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40, 0x200, 0x1, 0x8,
    0x40, 0x200, 0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40,
    0x200, 0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40, 0x200,
    0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40, 0x200
];
// seems like no perf loss compared to original
const getPHEValue = (codes) => {
    let suit_hash = 0;
    const suit_binary = [0, 0, 0, 0];
    const quinary = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    for (const code of codes) {
        suit_hash += suitbit_by_id[code];
        quinary[code >> 2]++;
    }
    if (dptables_1.suits[suit_hash]) {
        for (const code of codes) {
            suit_binary[code & 0x3] |= binaries_by_id[code];
        }
        return hash_table_1.flush[suit_binary[dptables_1.suits[suit_hash] - 1]];
    }
    const hash = (0, hash_1.hash_quinary)(quinary, codes.length);
    return hash_table_1.noflush[codes.length][hash];
};
exports.getPHEValue = getPHEValue;
