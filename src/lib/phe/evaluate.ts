// change to import results in 2.5x slowdown
const { suits } = require('./dptables')
const { hash_quinary } = require('./hash')
const { flush, noflush } = require('./hash-table')

const binaries_by_id = [
  // 52
  0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x2, 0x2, 0x4, 0x4, 0x4, 0x4, 0x8, 0x8, 0x8,
  0x8, 0x10, 0x10, 0x10, 0x10, 0x20, 0x20, 0x20, 0x20, 0x40, 0x40, 0x40, 0x40,
  0x80, 0x80, 0x80, 0x80, 0x100, 0x100, 0x100, 0x100, 0x200, 0x200, 0x200,
  0x200, 0x400, 0x400, 0x400, 0x400, 0x800, 0x800, 0x800, 0x800, 0x1000, 0x1000,
  0x1000, 0x1000
] as const
const suitbit_by_id = [
  // 52
  0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40, 0x200, 0x1, 0x8,
  0x40, 0x200, 0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40,
  0x200, 0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40, 0x200,
  0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40, 0x200, 0x1, 0x8, 0x40, 0x200
] as const

// seems like no perf loss compared to original
export const evaluate = (codes: number[]): number => {
  let suit_hash = 0
  const suit_binary = [0, 0, 0, 0]
  const quinary = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

  for (const code of codes) {
    suit_hash += suitbit_by_id[code]
    quinary[code >> 2]++
  }

  if (suits[suit_hash]) {
    for (const code of codes) {
      suit_binary[code & 0x3] |= binaries_by_id[code]
    }

    return flush[suit_binary[suits[suit_hash] - 1]]
  }

  const hash = hash_quinary(quinary, codes.length)

  return noflush[codes.length][hash]
}
